// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NftContractCreated extends ethereum.Event {
  get params(): NftContractCreated__Params {
    return new NftContractCreated__Params(this);
  }
}

export class NftContractCreated__Params {
  _event: NftContractCreated;

  constructor(event: NftContractCreated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[1].value.toString();
  }

  get maxSupply(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get contractAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class ERC721Factory extends ethereum.SmartContract {
  static bind(address: Address): ERC721Factory {
    return new ERC721Factory("ERC721Factory", address);
  }

  createNewNftContract(
    _name: string,
    _symbol: string,
    _maxSupply: BigInt
  ): Address {
    let result = super.call(
      "createNewNftContract",
      "createNewNftContract(string,string,uint256):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromUnsignedBigInt(_maxSupply)
      ]
    );

    return result[0].toAddress();
  }

  try_createNewNftContract(
    _name: string,
    _symbol: string,
    _maxSupply: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createNewNftContract",
      "createNewNftContract(string,string,uint256):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromUnsignedBigInt(_maxSupply)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateNewNftContractCall extends ethereum.Call {
  get inputs(): CreateNewNftContractCall__Inputs {
    return new CreateNewNftContractCall__Inputs(this);
  }

  get outputs(): CreateNewNftContractCall__Outputs {
    return new CreateNewNftContractCall__Outputs(this);
  }
}

export class CreateNewNftContractCall__Inputs {
  _call: CreateNewNftContractCall;

  constructor(call: CreateNewNftContractCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _maxSupply(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateNewNftContractCall__Outputs {
  _call: CreateNewNftContractCall;

  constructor(call: CreateNewNftContractCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
